package com.sample;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

import tech.artisanhub.ShapeletClassifier.Classifier;
import tech.artisanhub.ShapeletTrainerMD.DoubleVectorMD;
import weka.core.Instance;
import weka.core.SparseInstance;

public class TimeSerieClassifier {
	
	public static DoubleVectorMD[] vectors;
	public static int vecSize = 0;
	
	public static boolean isCritical(DoubleVectorMD vector) throws FileNotFoundException, IOException{
		//vector tömb rendezése
		if (vectors == null) vectors = new DoubleVectorMD[12]; //TODO
		else if (vecSize < 12) {//TODO
			vectors[vecSize] = vector;
			vecSize++;
		}
		else {
			for (int i = 0; i < 12; i++){ //TODO
				vectors[i] = vectors[i+1];
			}
			vectors[12] = vector; //TODO
		}
		
		//kritikus-e?
		boolean isCrit;
		double[] dArr = new double[vectors.getDoubleVector().length];
		for (int x = 0; x < dArr.length; x++){
			dArr[x] = vector.getElement(x).doubleValue();
		}
		
		Instance ts = new SparseInstance(1.0, dArr);
		
		Classifier cl = new Classifier();
		
		String cls = cl.classifyLine(ts, DroolsTest.shapelet, DroolsTest.cls, DroolsTest.th, DroolsTest.dimension);
		
		if (cls.equals("1.0")) isCrit = true;
		else isCrit = false;
				
		return isCrit;
	}
}
